// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if catalogs %}
#if os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  public typealias Image = UIImage
#elseif os(OSX)
  import AppKit.NSImage
  public typealias Image = NSImage
#endif

private class RingImagesBundleToken {}

{% macro casesBlock images sp %}
{{sp}}  {% for image in images %}
{{sp}}  {% if image.value %}
{{sp}}  case {{image.name|swiftIdentifier|snakeToCamelCase|lowerFirstWord|escapeReservedKeywords}} = "{{image.value}}"
{{sp}}  {% elif image.items %}
{{sp}}  enum {{image.name|swiftIdentifier|snakeToCamelCase|escapeReservedKeywords}} {
{{sp}}    {% set sp2 %}{{sp}}  {% endset %}
{{sp}}    {% call casesBlock image.items sp2 %}
{{sp}}  }
{{sp}}  {% endif %}
{{sp}}  {% endfor %}
{% endmacro %}
// swiftlint:disable file_length
{% set enumName %}{{param.enumName|default:"Asset"}}{% endset %}
public enum Ring{{enumName}}: String {
  {% if catalogs.count > 1 %}
  {% for catalog in catalogs %}
  enum {{catalog.name|swiftIdentifier|snakeToCamelCase|escapeReservedKeywords}} {
    {% call casesBlock catalog.assets "  " %}
  }
  {% endfor %}
  {% else %}
  {% call casesBlock catalogs.first.assets "" %}
  {% endif %}

  /**
    Loads from application's Bundle if image exists, then loads from current bundle, fatalError if image does not exist
  */
  public var smartImage: Image {
    if let appimage = Image(named: self.rawValue, in: nil, compatibleWith: nil) {
      return appimage
    } else if let fmkImage = Image(named: self.rawValue, in: Bundle(for: RingImagesBundleToken.self), compatibleWith: nil) {
      return fmkImage
    } else {
      fatalError("Impossible to load image \(self.rawValue)")
    }
  }

  var image: Image {
	if let img = Image(named: self.rawValue, in: Bundle(for: RingImagesBundleToken.self), compatibleWith: nil) {
        return img
    }
    fatalError("Impossible to load image \(self.rawValue)")
  }
}
// swiftlint:enable type_body_length

public extension Image {
  convenience init!(asset: Ring{{enumName}}) {
    self.init(named: asset.rawValue)
  }
}
{% else %}
// No image found
{% endif %}
