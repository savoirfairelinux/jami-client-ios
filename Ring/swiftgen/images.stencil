// Generated using SwiftGen, by O.Halligon â€” https://github.com/AliSoftware/SwiftGen

{% if images %}
#if os(iOS) || os(tvOS) || os(watchOS)
  import UIKit.UIImage
  public typealias Image = UIImage
#elseif os(OSX)
  import AppKit.NSImage
  public typealias Image = NSImage
#endif

private class RingImagesBundleToken {}

// swiftlint:disable file_length
// swiftlint:disable line_length

// swiftlint:disable type_body_length
public enum Ring{{enumName}}: String {
  {% for image in images %}
  case {{image|swiftIdentifier|snakeToCamelCase|lowerFirstWord}} = "{{image}}"
  {% endfor %}

  /** 
    Loads from application's Bundle if image exists, then loads from current bundle, fatalError if image does not exist
  */
  public var smartImage: Image {
    if let appimage = Image(named: self.rawValue, in: nil, compatibleWith: nil) {
      return appimage
    } else if let fmkImage = Image(named: self.rawValue, in: Bundle(for: RingImagesBundleToken.self), compatibleWith: nil) {
      return fmkImage
    } else {
      fatalError("Impossible to load image \(self.rawValue)")
    }
  }

  var image: Image {
	if let img = Image(named: self.rawValue, in: Bundle(for: RingImagesBundleToken.self), compatibleWith: nil) {
        return img
    }
    fatalError("Impossible to load image \(self.rawValue)")
  }
}
// swiftlint:enable type_body_length

public extension Image {
  convenience init!(asset: Ring{{enumName}}) {
    self.init(named: asset.rawValue)
  }
}
{% else %}
// No image found
{% endif %}
